{"version":3,"sources":["Welcome/Welcome.js","data/DinnerModel.js","data/ObservableModel.js","Sidebar/Sidebar.js","Dishes/Dishes.js","SelectDish/SelectDish.js","Dish/Dish.js","DishDetails/DishDetails.js","DishCheckout/DishCheckout.js","App.js","index.js"],"names":["Welcome","className","to","id","Component","BASE_URL","httpOptions","method","headers","modelInstance","_numberOfGuests","getNumberOfGuests","currentDish","undefined","currentId","selectedDish","Array","selectedId","this","num","notifyObservers","dish","map","item","push","filter","length","getDishPrice","reduce","a","b","type","query","url","fetch","then","processResponse","response","ok","json","value","_observers","observer","changeDetails","forEach","update","o","storage","set","key","localStorage","setItem","JSON","stringify","get","parse","getItem","remove","removeItem","Sidebar","props","onNumberOfGuestsChanged","e","model","setNumberOfGuests","target","state","display_name","numberOfGuests","setSelected","setState","addObserver","removeObserver","removeDishFromMenu","numGuest","tableTitle","getTotalMenuPrice","toFixed","count","items","title","pricePerServing","onClick","removeMenuClick","onChange","bind","style","display","cellSpacing","DishType","placeholder","keyword","onKeywordChange","onTypeChange","onBtnClick","Dishes","status","dishType","keyWord","getAllDishes","dishes","results","baseUri","catch","i","setId","console","log","dishesList","itemClick","src","image","componentDidMount","SelectDish","Dish","getDish","setCurrent","addDishToMenu","_dish","ingredients","extendedIngredients","name","amount","unit","instructions","addMenuClick","DishDetails","DishCheckout","cards","recipe","ingredient","overview","App","exact","path","component","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.49d4c6d9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Welcome.css\";\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <div className=\"Welcome avenir tc fw5\">\n        <h3 className=\"avenir tc fw5\">Welcome to dinner planner, you can choose what you want online and we will show\n          you the details of every dishes you'd like to know!</h3>\n        <h3 className=\"avenir tc fw5\">Press the button and start to plan your dinner!</h3>\n\n        <Link to=\"/search\" id=\"welcome-link\" className=\"f4  no-underline black hover-bg-black hover-white inline-flex items-center pa2 ba border-box\">\n          Start Planning\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Welcome;\n","import ObservableModel from \"./ObservableModel\";\n\nconst BASE_URL = \"https://cors-anywhere.herokuapp.com/http://sunset.nada.kth.se:8080/iprog/group/61\";\nconst httpOptions = {\n  method: \"GET\",\n  headers: { \"X-Mashape-Key\": \"3d2a031b4cmsh5cd4e7b939ada54p19f679jsn9a775627d767\" }\n};\n\nclass DinnerModel extends ObservableModel {\n  constructor() {\n    super();\n    this._numberOfGuests = 2;\n    this.getNumberOfGuests();\n    this.currentDish = undefined;\n    this.currentId = undefined;\n    this.selectedDish = new Array();\n    this.selectedId = new Array();\n  }\n\n  /**\n   * Get the number of guests\n   * @returns {number}\n   */\n  getNumberOfGuests() {\n    return this._numberOfGuests;\n  }\n\n  /**\n   * Set number of guests\n   * @param {number} num\n   */\n  setNumberOfGuests(num) {\n    this._numberOfGuests = num;\n    this.notifyObservers();\n  }\n\n  //Returns ingredients for the dishes on the menu.\n  getIngredients(dish) {\n    if (!dish) return undefined\n    else return dish[\"extendedIngredients\"].map(item => {\n      return {\n        \"name\": item[\"name\"]\n      }\n    })\n  }\n\n  //add dishes to Menu\n  addDishToMenu() {\n    this.selectedId.push(this.currentId)\n    this.selectedDish.push(this.currentDish)\n    //console.log(this.selectedDish)\n    this.notifyObservers()\n  }\n\n  //Removes dish from menu\n  removeDishFromMenu(id) {\n    this.selectedDish = this.selectedDish.filter(item => item[\"id\"] != id)\n    this.notifyObservers()\n  }\n\n\n  //Return the price of a dish\n  getDishPrice(dish) {\n    \n    return dish[\"pricePerServing\"]\n  }\n\n  //Returns the total price of the menu (all the ingredients multiplied by number of guests).\n  getTotalMenuPrice() {\n    if (this.selectedDish.length == 0) {\n      return 0\n    } else {\n      return this.selectedDish.map(dish => this.getDishPrice(dish)).reduce((a, b) => a + b)\n    }\n\n  }\n\n  // API methods\n\n  /**\n   * Do an API call to the search API endpoint.\n   * @returns {Promise<any>}\n   */\n  getAllDishes(type, query) {\n    let number = 15\n    let offset = 0\n    const url = `${BASE_URL}/recipes/search?number=${number}&offset=${offset}&query=${query}&type=${type}`;\n    return fetch(url, httpOptions).then(this.processResponse);\n  }\n\n  getDish(id) {\n    const url = `${BASE_URL}/recipes/${id}/information`;\n    return fetch(url, httpOptions).then(this.processResponse)\n  }\n\n  processResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  }\n\n  //function that returns a dish of specific ID\n  setId(id) {\n    this.currentId = id;\n    this.notifyObservers()\n  }\n\n  setCurrent(id, dish) {\n    this.currentId = id\n    this.currentDish = dish\n    this.notifyObservers()\n  }\n\n  setSelected(value) {\n    this.selectedDish = value\n  }\n\n\n}\n\n// Export an instance of DinnerModel\nconst modelInstance = new DinnerModel();\nexport default modelInstance;\n","class ObservableModel {\n  constructor() {\n    this._observers = [];\n  }\n\n  addObserver(observer) {\n    this._observers.push(observer);\n  }\n\n  notifyObservers(changeDetails) {\n    this._observers.forEach(observer => {\n      observer.update(this, changeDetails);\n    });\n  }\n\n  removeObserver(observer) {\n    this._observers = this._observers.filter(o => o !== observer);\n  }\n}\n\nexport default ObservableModel;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Sidebar.css\";\nimport modelInstance from \"../data/DinnerModel\";\n\nvar storage = {\n  set(key, value) {\n    localStorage.setItem(key, JSON.stringify(value))\n  },\n  get(key) {\n    return JSON.parse(localStorage.getItem(key))\n  },\n  remove(key) {\n    return localStorage.removeItem(key)\n  }\n}\n\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    // we put on state the properties we want to use and modify in the component\n    this.state = {\n      display_name: 'block',\n      numberOfGuests: this.props.model.getNumberOfGuests(),\n      selectedDish: this.props.model.selectedDish\n    };\n\n\n  }\n\n  // this methods is called by React lifecycle when the\n  // component is actually shown to the user (mounted to DOM)\n  // that's a good place to setup model observer\n  componentDidMount() {\n    let numberOfGuests = storage.get('numberOfGuests');\n    let selectedDish = storage.get('selectedDish');\n    if (numberOfGuests && selectedDish) {\n      modelInstance.setNumberOfGuests(numberOfGuests);\n      modelInstance.setSelected(selectedDish);\n      this.setState({\n        numberOfGuests: numberOfGuests,\n        selectedDish: selectedDish\n      })\n    }\n    //console.log(modelInstance.selectedDish)\n    this.props.model.addObserver(this);\n  }\n\n  // this is called when component is removed from the DOM\n  // good place to remove observer\n  componentWillUnmount() {\n    this.props.model.removeObserver(this);\n  }\n\n  // in our update function we modify the state which will\n  // cause the component to re-render\n  update() {\n    this.setState({\n      numberOfGuests: this.props.model.getNumberOfGuests(),\n      selectedDish: this.props.model.selectedDish\n    });\n  }\n\n  // our handler for the input's on change event\n  onNumberOfGuestsChanged = e => {\n    this.props.model.setNumberOfGuests(e.target.value);\n    storage.set('numberOfGuests', e.target.value);\n  };\n\n  removeMenuClick(id) {\n    modelInstance.removeDishFromMenu(id)\n    storage.set('selectedDish', modelInstance.selectedDish);\n  }\n\n  display_name() {\n    if (this.state.display_name == 'none') {\n        this.setState({\n            display_name: 'block',\n        })\n    }\n    else if (this.state.display_name == 'block') {\n        this.setState({\n            display_name: 'none',\n        })\n    }\n}\n\n\n  render() {\n\n    let numGuest = this.state.numberOfGuests;\n    let tableTitle = `People: ${numGuest}, Total price: ${(modelInstance.getTotalMenuPrice() * numGuest).toFixed(2)}`;\n    let count = 0;\n    let items = modelInstance.selectedDish.map(item => {\n      count++\n      return (\n        <tr key={count}>\n          <td className=\"v-mid fw4 avenir tc pv3 pr3 bb b--black-20\">{item.title}</td>\n          <td className=\"v-mid fw4 avenir tc pv3 pr3 bb b--black-20\">{(item.pricePerServing * numGuest).toFixed(2)}</td>\n          <td className=\"v-mid fw4 avenir tc pv3 pr3 bb b--black-20\" onClick={() => { this.removeMenuClick(item.id) }}>delete</td>\n        </tr>\n      )\n    })\n\n    return (\n      <div className=\"Sidebar fl w-third-l w-100 w-50-m pa2 center\">\n        <h3 className=\"tc avenir\">My Dinner</h3>\n        <p className=\"center avenir tc\">\n          People:\n          <input\n            type=\"number\"\n            value={this.state.numberOfGuests}\n            onChange={this.onNumberOfGuestsChanged}\n          />\n        </p>\n        <a className=\"hide-bar avenir tc flex items-center justify-center pa1 bg-lightest-blue navy\" onClick={this.display_name.bind(this)}> hide</a>\n        {/* table here */}\n        \n        <div className=\"pa4 table-sidebar\" style={{display:this.state.display_name}}>\n          <div className=\"overflow-auto\">\n            <table className=\"f6 w-100 mw8 center\" cellSpacing=\"0\">\n              <thead>\n                <tr>\n                  <th className=\"fw6 avenir tc bb b--black-20 tl pv3 pr3 bg-white\">Name</th>\n                  <th className=\"fw6 avenir tc bb b--black-20 tl pv3 pr3 bg-white\">Quantity</th>\n                  <th className=\"fw6 avenir tc bb b--black-20 tl pv3 pr3 bg-white\">Modify</th>\n                </tr>\n              </thead>\n              <tbody className=\"lh-copy\">\n                {items}\n              </tbody>\n              <caption className=\"pa2 fw6 avenir tc bb b--black-20 tl bg-white\">\n                {tableTitle}\n              </caption>\n            </table>\n          </div>\n        </div>\n        <div className=\"checkout-btn tc center\">\n          <Link className=\"avenir f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa2 ba border-box\"\n            to=\"/menuOverview\">checkout</Link></div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport { Link, HashRouter } from \"react-router-dom\";\n\n// Alternative to passing the moderl as the component property,\n// we can import the model instance directly\nimport modelInstance from \"../data/DinnerModel\";\nimport \"./Dishes.css\";\n\nclass DishType extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"items-center search-bar\">\n        <input type=\"text\" placeholder=\"Search food here...\" value={this.props.keyword} className=\"avenir\"\n          onChange={\n            (e) => this.props.onKeywordChange(e.target.value)\n          }\n        />\n        <select value={this.props.type} className=\"avenir\"\n          onChange={\n            (e) => this.props.onTypeChange(e.target.value)\n          }\n        >\n          <option value=\"all\">All</option>\n          <option value=\"main course\">main course</option>\n          <option value=\"dessert\">dessert</option>\n          <option value=\"side dish\">side dish</option>\n          <option value=\"dessert\">dessert</option>\n          <option value=\"appetizer\">appetizer</option>\n          <option value=\"salad\">salad</option>\n          <option value=\"bread\">bread</option>\n          <option value=\"breakfast\">breakfast</option>\n          <option value=\"soup\">soup</option>\n          <option value=\"beverage\">beverage</option>\n          <option value=\"sauce\">sauce</option>\n          <option value=\"drink\">drink</option>\n        </select>\n        <a className=\"avenir f6 lf5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa1 ba border-box\"\n          onClick={\n            () => { this.props.onBtnClick() }\n          }\n        >search</a>\n      </div>\n    )\n  }\n}\n\nclass Dishes extends Component {\n  constructor(props) {\n    super(props);\n    // We create the state to store the various statuses\n    // e.g. API data loading or error\n    this.state = {\n      status: \"LOADING\",\n      dishType: \"all\",\n      keyWord: \"\"\n    };\n  }\n\n  // this methods is called by React lifecycle when the\n  // component is actually shown to the user (mounted to DOM)\n  // that's a good place to call the API and get the data\n  componentDidMount() {\n    // when data is retrieved we update the state\n    // this will cause the component to re-render\n    modelInstance\n      .getAllDishes(this.state.dishType, this.state.keyWord)\n      .then(dishes => {\n        this.setState({\n          status: \"LOADED\",\n          dishes: dishes.results,\n          baseUri: dishes.baseUri,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          status: \"ERROR\"\n        });\n      });\n  }\n\n  itemClick(i) {\n    //console.log(i);\n    modelInstance.setId(i);\n    console.log(modelInstance.currentId);\n  }\n\n  render() {\n    let dishesList = null;\n    // depending on the state we either generate\n    // useful message to the user or show the list\n    // of returned dishes\n    switch (this.state.status) {\n      case \"LOADING\":\n        dishesList = <em>Loading...</em>;\n        break;\n      case \"LOADED\":\n        dishesList = this.state.dishes.map(dish => {\n\n          return (\n            <div className=\"card\" key={dish.id}>\n            <Link className=\"no-underline avenir tc\" to={\"/dishDetails\"} onClick={() => this.itemClick(dish.id)} key={dish.id}>\n              <div className=\"br2 ba dark-gray b--black-10 mw5\" >\n                <img src={this.state.baseUri + \"/\" + dish.image} className=\"db w-100 br2 br--top\" />\n                <div className=\"pa2 ph3-ns pb3-ns\">\n                  <div className=\"dt w-100 mt1\">\n                    <h1 className=\"f5 fw5 f4-ns mv0\">{dish.title}</h1>\n                  </div>\n                </div>\n              </div>\n            </Link>\n            </div>\n          )\n    });\n    break;\n      default:\n    dishesList = <b>Failed to load data, please try again</b>;\n  break;\n}\n\nreturn (\n  <div className=\"Dishes fl w-two-thirds w-100 w-50-m pa2 center\">\n    <DishType\n      type={this.state.dishType}\n      keyword={this.state.keyWord}\n      onTypeChange={\n        (type) => this.setState({ dishType: type })}\n      onKeywordChange={\n        (keyword) => this.setState({ keyWord: keyword })\n      }\n      onBtnClick={\n        () => this.componentDidMount()\n      }\n    />\n    <div className=\"masonry-cards\">\n        {dishesList}\n    </div>\n  </div>\n);\n  }\n}\n\n\n\nexport default Dishes;\n\n{/* <div className=\"fl w-100 w-30-ns w-50-m ph2 avenir tc\">\n<article className=\"br2 ba dark-gray b--black-10 mw5\" >\n  <img src={this.state.baseUri + \"/\" + dish.image} className=\"db w-100 br2 br--top\" />\n  <div className=\"pa2 ph3-ns pb3-ns\">\n    <div className=\"dt w-100 mt1\">\n      <h1 className=\"f5 fw5 f4-ns mv0\">{dish.title}</h1>\n    </div>\n  </div>\n</article>\n</div> */}\n","import React, { Component } from \"react\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Dishes from \"../Dishes/Dishes\";\nimport \"./SelectDish.css\";\n\nclass SelectDish extends Component {\n  render() {\n    return (\n      <div className=\"SelectDish flex flex-wrap justify-center\">\n        {/* <h2>This is the Select Dish screen</h2> */}\n\n        {/* We pass the model as property to the Sidebar component */}\n        <Sidebar model={this.props.model} />\n        <Dishes />\n      </div>\n    );\n  }\n}\n\nexport default SelectDish;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport modelInstance from \"../data/DinnerModel\";\nimport \"./Dish.css\";\n\nvar storage = {\n    set(key, value) {\n        localStorage.setItem(key, JSON.stringify(value))\n    },\n    get(key) {\n        return JSON.parse(localStorage.getItem(key))\n    },\n    remove(key) {\n        return localStorage.removeItem(key)\n    }\n}\n\nclass Dish extends Component {\n    constructor(props) {\n        super(props);\n\n        let id = modelInstance.currentId\n        this.state = {\n            status: \"LOADING\",\n            id: id,\n            numberOfGuests: this.props.model.getNumberOfGuests()\n\n        };\n        console.log(this.state.numberOfGuests)\n\n    }\n\n    componentDidMount() {\n        modelInstance\n            .getDish(this.state.id)\n            .then(dish => {\n                modelInstance.setCurrent(this.state.id, dish)\n                this.setState({\n                    status: \"LOADED\",\n                    dish: dish,\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    status: \"ERROR\"\n                });\n            });\n        this.props.model.addObserver(this);\n        let numberOfGuests = storage.get('numberOfGuests');\n        let selectedDish = storage.get('selectedDish');\n        if (numberOfGuests && selectedDish) {\n            modelInstance.setNumberOfGuests(numberOfGuests);\n            modelInstance.setSelected(selectedDish);\n            this.setState({\n                numberOfGuests: numberOfGuests,\n                selectedDish: selectedDish\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.model.removeObserver(this);\n    }\n\n    update() {\n        this.setState({\n            numberOfGuests: this.props.model.getNumberOfGuests()\n\n        });\n    }\n\n    addMenuClick() {\n        modelInstance.addDishToMenu()\n        storage.set('selectedDish', modelInstance.selectedDish);\n        //console.log(localStorage)\n    }\n\n\n\n    render() {\n        let dish = null;\n        switch (this.state.status) {\n            case \"LOADING\":\n                dish = <em>Loading...</em>;\n                break;\n            case \"LOADED\":\n                let _dish = this.state.dish;\n                let count = 0;\n                let numGuest = modelInstance.getNumberOfGuests();\n                let ingredients = _dish.extendedIngredients.map(item => {\n                    count++\n                    return (\n                        <tr key={count}>\n                            <td className=\" v-mid fw4 avenir tc pv3 pr3 bb b--black-20\">{item.name}</td>\n                            <td className=\" v-mid fw4 avenir tc pv3 pr3 bb b--black-20\">{item.amount * numGuest}</td>\n                            <td className=\" v-mid fw4 avenir tc pv3 pr3 bb b--black-20\">{item.unit}</td>\n                        </tr>\n                    )\n                });\n\n                let tableTitle = `Ingredient for ${modelInstance.getNumberOfGuests()} People, Price: ${(_dish.pricePerServing * numGuest).toFixed(2)}`\n\n                dish =\n                    <div>\n                        <h1 className=\"tc normal avenir\">{_dish.title}</h1>\n                        <img src={_dish.image} className=\"db w-50 br2 br--top center\" />\n                        <h4 className=\"fw3 tc avenir\">{_dish.instructions}</h4>\n                        <div className=\"pa4\">\n                            <div className=\"overflow-auto\">\n                                <table className=\"f6 w-100 mw8 center\" cellSpacing=\"0\">\n                                    <caption className=\"pa2 fw6 avenir tc bb b--black-20 tl pb3 pr3 bg-white\">\n                                        {tableTitle}\n                                    </caption>\n                                    <thead>\n                                        <tr>\n                                            <th className=\" v-mid fw6 avenir tc bb b--black-20 tl pv3 pr3 bg-white\">Name</th>\n                                            <th className=\" v-mid fw6 avenir tc bb b--black-20 tl pv3 pr3 bg-white\">Quantity</th>\n                                            <th className=\" v-mid fw6 avenir tc bb b--black-20 tl pv3 pr3 bg-white\">Unit</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"lh-copy\">\n                                        {ingredients}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n\n\n                    </div>\n                    ;\n                break;\n            default:\n                dish = <b>aaaFailed to load data, please try again</b>;\n                break;\n        }\n\n        return (\n            <div className=\"Dishes fl w-two-thirds w-100 w-50-m pa2\">\n                <Link to=\"/search\" className=\" avenir f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa3 ba border-box\">Back to Search</Link>\n                {dish}\n                <Link to=\"/search\" className=\"avenir f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa3 ba border-box\"\n                    onClick={() => this.addMenuClick()}>\n                    Add to Menu\n                </Link>\n            </div>\n        );\n    }\n\n}\n\nexport default Dish;","import React, { Component } from \"react\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Dish from \"../Dish/Dish\";\nimport \"./DishDetails.css\";\n\nclass DishDetails extends Component {\n    render() {\n      return (\n        <div className=\"DishDetails flex flex-wrap justify-center\">\n          {/* <h2>This is the DishDetails screen</h2> */}\n  \n          {/* We pass the model as property to the Sidebar component */}\n          <Sidebar model={this.props.model} />\n          <Dish model={this.props.model}/>\n        </div>\n      );\n    }\n  }\n  \n  export default DishDetails;\n  ","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport modelInstance from \"../data/DinnerModel\";\nimport \"./DishCheckout.css\";\n\nclass DishCheckout extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let dishes = modelInstance.selectedDish\n        this.state = {\n            status: \"LOADING\",\n            dishes: dishes,\n            display_name: 'none'\n        };\n    }\n\n    display_name() {\n        if (this.state.display_name == 'none') {\n            this.setState({\n                display_name: 'block',\n            })\n        }\n        else if (this.state.display_name == 'block') {\n            this.setState({\n                display_name: 'none',\n            })\n\n        }\n    }\n\n    render() {\n\n        let cards = this.state.dishes.map(dish => {\n            return (\n                <article className=\"avenir br2 ba dark-gray b--black-10 mv4 w-100 w-70-m w-30-l mw5\" key={dish.id}>\n                    <img src={dish.image} className=\"db w-100 br2 br--top\" />\n                    <div className=\"pa2 ph3-ns pb3-ns\">\n                        <div className=\"dt w-100 mt1\">\n                            <h1 className=\"f5 fw5 tc f4-ns mv0\">{dish.title}</h1>\n                        </div>\n                    </div>\n                </article>\n            )\n        });\n\n        let recipe = this.state.dishes.map(dish => {\n            let ingredient = dish.extendedIngredients.map(name => {\n                return (\n                    <h4 className=\"avenir tc fw4\">{name.name}</h4>\n                )\n            })\n            return (\n                <div>\n                    <div className=\"ph2-ns flex items-center\">\n                        <div className=\" w-50 w-30-l pa2 center\">\n                            <div className=\" bg-white pv4\"><h4 className=\"avenir tc fw6\">{dish.title}</h4><img src={dish.image} className=\"db w-100 br2 br--top\" /></div>\n                        </div>\n                        <div className=\" w-50 w-30-l pa2 center\">\n                            <div className=\" bg-white pv4\">{ingredient}</div>\n                        </div>\n                    </div>\n                    <div className=\" w-100 pa2\">\n                        <div className=\"tc avenir bg-white pv4\">{dish.instructions}</div>\n                    </div>\n                </div>\n            )\n        });\n\n\n        let numGuest = modelInstance.getNumberOfGuests();\n        let overview = `People: ${numGuest}, Total price: ${(modelInstance.getTotalMenuPrice() * numGuest).toFixed(2)}`\n\n        return (\n            <div className=\"CheckoutView flex flex-wrap justify-center\">\n                <h3 className=\"avenir fw7 tc w-100\">{overview}</h3>\n                <div className=\"center\">\n                    <a className=\"f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa3 ba border-box center\"\n                        onClick={this.display_name.bind(this)}>Show Recipe</a>\n                    <Link className=\"f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa3 ba border-box fr\"\n                        to=\"/search\">Back to Edit</Link>\n                </div>\n                <div className=\"flex justify-center w-100\">{cards}</div>\n                {/* <a className=\"f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa3 ba border-box mr4 center\"\n                    onClick={this.display_name.bind(this)}>Show Recipe</a> */}\n                <div className=\"fl w-100 pa2\" style={{ display: this.state.display_name }}>\n                    <div className=\"mw9 center ph3-ns\">\n                        {recipe}\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default DishCheckout;\n","import React, { Component } from \"react\";\nimport { Route} from \"react-router-dom\";\n\nimport Welcome from \"./Welcome/Welcome\";\nimport modelInstance from \"./data/DinnerModel\";\nimport SelectDish from \"./SelectDish/SelectDish\";\nimport DishDetails from \"./DishDetails/DishDetails\";\nimport DishCheckout from \"./DishCheckout/DishCheckout\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Dinner Planner\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header light-red avenir tc f4 w-100 pa2\">\n          <h1 className=\"App-title  tc \">{this.state.title}</h1>\n        </header>\n        {/* We rended diffrent component based on the path */}\n        <Route exact path=\"/\" component={Welcome} />\n        <Route \n          path=\"/search\"\n          render={() => <SelectDish  model={modelInstance} />}\n        />\n        \n        <Route path=\"/dishDetails\"\n          render={() => <DishDetails model={modelInstance} />}\n        />\n\n        <Route path=\"/menuOverview\"\n          render={()=> <DishCheckout model={modelInstance} />}\n        />\n        \n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter basename = \"/DinnerOrder_React\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}